<!DOCTYPE html>
<html lang="es">
<head>
  <%- include('partials/head', { title: 'Gestión de Usuarios' }) %>
</head>
<body class="nav-md">
  <div class="container body">
    <div class="main_container">
      <%- include('partials/sidebar') %>

      <!-- top navigation -->
      <%- include('partials/header') %>
      <!-- /top navigation -->

      <!-- page content -->
      <div class="right_col" role="main" id="userApp">
        <div class="">
          <div class="page-title">
            <div class="title_left">
              <h3>Gestión de Usuarios</h3>
            </div>

            <div class="title_right">
              <div class="col-md-5 col-sm-5 col-xs-12 form-group pull-right top_search">
                <div class="input-group">
                  <input type="text" class="form-control" placeholder="Buscar usuarios..." v-model="searchTerm" @input="filtrarUsuarios">
                  <span class="input-group-btn">
                    <button class="btn btn-secondary" type="button" @click="limpiarBusqueda">Limpiar</button>
                  </span>
                </div>
              </div>
            </div>
          </div>

          <div class="clearfix"></div>

          <!-- Loading -->
          <div v-if="cargando" class="text-center">
            <i class="fa fa-spinner fa-spin fa-2x"></i>
            <p>Cargando usuarios...</p>
          </div>

          <!-- Empty state -->
          <div v-if="!cargando && users.length === 0" class="alert alert-info">
            <i class="fa fa-info-circle"></i> No hay usuarios disponibles.
            <button class="btn btn-primary btn-sm ml-2" @click="cargarUsuarios">
              <i class="fa fa-refresh"></i> Recargar
            </button>
          </div>

          <div class="row" v-if="!cargando">
            <div class="col-md-12 col-sm-12">
              <div class="x_panel">
                <div class="x_title">
                  <h2>Lista de Usuarios <small>Total: {{ users.length }}</small></h2>
                  <div class="clearfix"></div>
                </div>
                <div class="x_content">
                  <div class="row">
                    <div class="col-sm-12">
                      <div class="card-box table-responsive">
                        <p class="text-muted font-13 m-b-30">
                          Administra los usuarios del sistema. Puedes crear, editar y eliminar.
                        </p>

                        <div class="mb-3">
                          <button class="btn btn-primary" @click="abrirModalNuevo">
                            Nuevo Usuario
                          </button>
                          <button class="btn btn-info ml-2" @click="cargarUsuarios">
                            <i class="fa fa-refresh"></i> Refrescar
                          </button>
                        </div>

                        <div class="table-responsive">
                          <table class="table table-striped table-bordered">
                            <thead>
                              <tr>
                                <th>ID</th>
                                <th>Username</th>
                                <th>Nombre</th>
                                <th>Apellidos</th>
                                <th>Creado</th>
                                <th>Actualizado</th>
                                <th>Acciones</th>
                              </tr>
                            </thead>
                            <tbody>
                              <tr v-for="u in usersFiltrados" :key="u.id">
                                <td>{{ u.id }}</td>
                                <td><code>{{ u.username }}</code></td>
                                <td>{{ u.name }}</td>
                                <td>{{ u.lastname }}</td>
                                <td>{{ formatDate(u.created_at) }}</td>
                                <td>{{ formatDate(u.updated_at) }}</td>
                                <td>
                                  <button class="btn btn-primary btn-xs" @click="editarUsuario(u)">
                                    <i class="fa fa-edit"></i>
                                  </button>
                                  <button class="btn btn-danger btn-xs" @click="confirmarEliminar(u.id)">
                                    <i class="fa fa-trash"></i>
                                  </button>
                                </td>
                              </tr>
                              <tr v-if="usersFiltrados.length === 0 && !cargando">
                                <td colspan="7" class="text-center">No se encontraron usuarios</td>
                              </tr>
                            </tbody>
                          </table>
                        </div>

                      </div>
                    </div>
                  </div>
                </div> <!-- /x_content -->
              </div>
            </div>
          </div>
        </div>

        <!-- ===== Modales ===== -->

        <!-- Modal Nuevo/Editar Usuario -->
        <div class="modal fade" id="userModal" tabindex="-1" role="dialog">
          <div class="modal-dialog" role="document">
            <div class="modal-content">
              <div class="modal-header">
                <h4 class="modal-title">{{ modalTitle }}</h4>
                <button type="button" class="close" data-dismiss="modal">
                  <span>&times;</span>
                </button>
              </div>
              <div class="modal-body">
                <form @submit.prevent="guardarUsuario">
                  <div class="form-group">
                    <label>Username *</label>
                    <input type="text" class="form-control" v-model="form.username" required>
                  </div>
                  <div class="form-group">
                    <label>Nombre *</label>
                    <input type="text" class="form-control" v-model="form.name" required>
                  </div>
                  <div class="form-group">
                    <label>Apellidos *</label>
                    <input type="text" class="form-control" v-model="form.lastname" required>
                  </div>

                  <!-- Password: requerido solo si es creación -->
                  <div class="form-group" :class="{ 'has-error': !isEditing && !form.password }">
                    <label>
                      Password <span v-if="!isEditing">*</span>
                      <small v-else class="text-muted">(dejar vacío para no cambiar)</small>
                    </label>
                    <input type="password" class="form-control" v-model="form.password" :required="!isEditing">
                  </div>
                </form>
              </div>
              <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" @click="guardarUsuario" :disabled="loading">
                  <i class="fa fa-spinner fa-spin" v-if="loading"></i>
                  {{ isEditing ? 'Actualizar' : 'Crear' }} Usuario
                </button>
              </div>
            </div>
          </div>
        </div>

        <!-- Modal Confirmar Eliminación -->
        <div class="modal fade" id="confirmarModal" tabindex="-1" role="dialog">
          <div class="modal-dialog" role="document">
            <div class="modal-content">
              <div class="modal-header">
                <h4 class="modal-title">Confirmar Eliminación</h4>
                <button type="button" class="close" data-dismiss="modal">
                  <span>&times;</span>
                </button>
              </div>
              <div class="modal-body">
                <p>¿Está seguro de eliminar el usuario #{{ userAEliminar }}?</p>
                <p class="text-danger">Esta acción no se puede deshacer.</p>
              </div>
              <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-danger" @click="eliminarUsuario" :disabled="loading">
                  <i class="fa fa-spinner fa-spin" v-if="loading"></i>
                  Eliminar
                </button>
              </div>
            </div>
          </div>
        </div>

      </div>
      <!-- /page content -->

      <!-- footer content -->
      <footer>
        <div class="pull-right">
          Sistema de Usuarios - Template by <a href="https://colorlib.com">Colorlib</a>
        </div>
        <div class="clearfix"></div>
      </footer>
      <!-- /footer content -->
    </div>
  </div>

  <!-- Vue -->
  <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.min.js"></script>

  <!-- DATOS INYECTADOS POR EL SERVIDOR -->
  <script type="application/json" id="users-json">
    <%- JSON.stringify(users || []) %>
  </script>

  <script>
    new Vue({
      el: '#userApp',
      data: {
        users: [],
        usersFiltrados: [],
        searchTerm: '',
        cargando: true,
        loading: false,
        isEditing: false,
        modalTitle: 'Nuevo Usuario',
        form: {
          id: null,
          username: '',
          name: '',
          lastname: '',
          password: '' // solo para crear o cambiar
        },
        userAEliminar: null
      },
      mounted() {
        this.cargarDatosIniciales();
      },
      methods: {
        cargarDatosIniciales() {
          this.cargando = true;
          try {
            const el = document.getElementById('users-json');
            if (el && el.textContent.trim()) {
              const data = JSON.parse(el.textContent);
              this.users = Array.isArray(data) ? data : [];
              this.usersFiltrados = [...this.users];
              this.cargando = false;
              return;
            }
          } catch (e) {
            console.warn('Fallo parseando users-json, usando API...', e);
          }
          this.cargarUsuarios();
        },
        cargarUsuarios() {
          this.cargando = true;
          fetch('/users/api', { headers: { 'Accept': 'application/json' }})
            .then(r => {
              if (!r.ok) throw new Error('Respuesta no OK');
              return r.json();
            })
            .then(data => {
              this.users = Array.isArray(data) ? data : [];
              this.usersFiltrados = [...this.users];
              this.cargando = false;
            })
            .catch(err => {
              console.error('Error al cargar usuarios:', err);
              // Datos de prueba como fallback
              this.users = [{
                id: 1,
                username: 'admin',
                name: 'Eddy',
                lastname: 'Ramos',
                created_at: new Date().toISOString(),
                updated_at: new Date().toISOString()
              }];
              this.usersFiltrados = [...this.users];
              this.cargando = false;
            });
        },
        filtrarUsuarios() {
          if (!this.searchTerm.trim()) {
            this.usersFiltrados = [...this.users];
            return;
          }
          const t = this.searchTerm.toLowerCase();
          this.usersFiltrados = this.users.filter(u =>
            (u.username && u.username.toLowerCase().includes(t)) ||
            (u.name && u.name.toLowerCase().includes(t)) ||
            (u.lastname && u.lastname.toLowerCase().includes(t))
          );
        },
        limpiarBusqueda() {
          this.searchTerm = '';
          this.usersFiltrados = [...this.users];
        },
        abrirModalNuevo() {
          this.isEditing = false;
          this.modalTitle = 'Nuevo Usuario';
          this.resetForm();
          $('#userModal').modal('show');
        },
        editarUsuario(u) {
          this.isEditing = true;
          this.modalTitle = `Editar Usuario #${u.id}`;
          this.form = {
            id: u.id,
            username: u.username || '',
            name: u.name || '',
            lastname: u.lastname || '',
            password: '' // vacío: no cambia
          };
          $('#userModal').modal('show');
        },
        guardarUsuario() {
          if (!this.validarFormulario()) return;
          this.loading = true;

          const formEl = document.createElement('form');
          formEl.method = 'POST';
          formEl.action = this.isEditing ? `/users/${this.form.id}/update` : '/users/create';

          // Campos
          const payload = { ...this.form };
          if (this.isEditing && (!payload.password || !payload.password.trim())) {
            delete payload.password; // no enviar si vacío
          }
          // No incluir id en create
          if (!this.isEditing) delete payload.id;

          Object.keys(payload).forEach(k => {
            const input = document.createElement('input');
            input.type = 'hidden';
            input.name = k;
            input.value = payload[k];
            formEl.appendChild(input);
          });

          document.body.appendChild(formEl);
          formEl.submit();
        },
        confirmarEliminar(id) {
          this.userAEliminar = id;
          $('#confirmarModal').modal('show');
        },
        eliminarUsuario() {
          this.loading = true;
          const formEl = document.createElement('form');
          formEl.method = 'POST';
          formEl.action = `/users/${this.userAEliminar}/delete`;
          document.body.appendChild(formEl);
          formEl.submit();
        },
        validarFormulario() {
          if (!this.form.username || !this.form.username.trim()) {
            alert('El username es requerido'); return false;
          }
          if (!this.form.name || !this.form.name.trim()) {
            alert('El nombre es requerido'); return false;
          }
          if (!this.form.lastname || !this.form.lastname.trim()) {
            alert('Los apellidos son requeridos'); return false;
          }
          if (!this.isEditing && (!this.form.password || !this.form.password.trim())) {
            alert('La contraseña es requerida al crear'); return false;
          }
          return true;
        },
        resetForm() {
          this.form = { id: null, username: '', name: '', lastname: '', password: '' };
        },
        formatDate(s) {
          if (!s) return '';
          try {
            const d = new Date(s);
            return d.toLocaleDateString('es-ES') + ' ' + d.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' });
          } catch { return s; }
        }
      }
    });
  </script>

  <%- include('partials/scripts') %>
</body>
</html>